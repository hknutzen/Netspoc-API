#!/bin/bash

# Checkin changed files into CVS

# Abort on each error
set -e

JOB=$1
MSG="API: $(jq -r '.params | .crq' $JOB)"

abort-err () { echo "$*" >&2; cat err >&2; exit 1; }

# Try to check in.
while true; do
    if cvs -q commit -m"$MSG" netspoc >/dev/null 2>err; then
        break;
    fi
    # Try again if Up-to-date check failed,
    # i.e. both givven messages are ignored.
    # Don't check for exact name of "cvs" command in message,
    # because cvs command may have been changed by $CVS_Server.
    if [ -n "$(cat err | egrep -v '^[^ ]+ commit: Up-to-date check failed for|^[^ ]+ \[commit aborted\]: correct above errors first!$')" ] ; then
        abort-err "Error during cvs commit:"
    fi
    cvs -q update netspoc >/dev/null 2>err ||
        abort-err "during cvs update (after change):"
    # Check for merge conflict
    if [ -n "$(cat err | egrep '^[^ ]+ update: conflicts found in')" ] ; then
        abort-err "Merge conflict during cvs update:"
    fi
done
