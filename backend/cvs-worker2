#!/bin/bash

# Checkin changed files into Git

# Abort on each error
set -e

# Check parameter
verbose=''
if getopts 'v' flag; then
    shift
    verbose=1
fi

abort-err () { echo "$*" >&2; cat err >&2; exit 1; }
info () { [ $verbose ] && echo "$*" >&2 || true; }

# Add job IDs and CRQs to commit message.
[ $# -gt 1 ] && S=s
MSG="API job$S:"
for file in $(ls -rt $*); do
    job=$(basename $file)
    MSG="$MSG $job"
done

# Get CRQs from all jobs given as arguments.
CRQ=$(jq -r '.crq | values' $* | sort -u | paste -s -d' ')
[ -n "$CRQ" ] && MSG="$MSG
$CRQ"

cd netspoc
# Handle all changed, removed and added files.
git add --all
info "Committing changes"
git commit -m"$MSG" >/dev/null 2>err ||
    abort-err "Error during git commit:"
# Try to push.
while true; do
    git pull --quiet >/dev/null 2>err ||
        abort-err "Error during git pull:"
    if git push --quiet 2>err ; then
        info "Success"
        break
    fi
    # Try again if up-to-date check failed,
    if [ -n "$(cat err | grep -v '(fetch first)$')" ] ; then
        abort-err "Error during git push:"
    fi
done
