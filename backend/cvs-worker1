#!/bin/bash

# Checkout netspoc files from CVS, then call worker and netspoc.

# Abort on each error
set -e

# If set, the return value of a pipeline is the value of the last
# (rightmost) command to exit with a non-zero status, or zero if all
# commands in the pipeline exit successfully.
set -o pipefail

# Check parameter
verbose=''
if getopts 'v' flag; then
    shift
    verbose=1
fi

abort () { echo "Error: $*" >&2; exit 1; }
abort-err () { echo "$*" >&2; cat err >&2; exit 1; }

info () { [ $verbose ] && echo "$*" >&2 || true; }
abort-try-again () {
    abort "API is currently unusable," \
          "because someone else has checked in bad files.
 Please try again later."
    }
info "Checking out files to $(readlink -f .)/netspoc"
rm -rf netspoc
cvs -Q checkout -P netspoc 2>err ||
    abort-err "Error during initial cvs checkout:"

# Copy unchanged netspoc files for further inspection in case of errors.
rm -rf orig
mkdir orig
cp -r netspoc orig/netspoc

info "Applying changes and compiling files"
if ! modify-netspoc-api -q netspoc $*  2>err; then
    case $(cat err) in
        "Error: While reading netspoc files:"*) abort-try-again;;
        *)
            abort-err "Can't modify Netspoc files:"
    esac
fi
if netspoc -q netspoc 2>err; then
    # Success.
    if [ ! -s err ] ; then
        exit 0
    fi
    # Warnings occurred.
    FAILED=''
else
    FAILED=1
fi

info "Checking original files for errors or warnings"
if ! (cd orig; netspoc -q netspoc 2>../err.orig; ) then

    # Current state has files that won't compile.
    abort-try-again

fi

# Original files are ok, but changed files failed to compile.
if [ -n "$FAILED" ] ; then
    abort-err "Netspoc shows errors:"
fi

# Collect warnings. It is ok if no warnings were found.
grep '^Warning:' err.orig >warn || true

# Warning occurred when compiling changed files.
# Compare with warnings from compiling original files.
if ! grep '^Warning:' err | cmp -s warn - ; then
    abort-err "Netspoc shows warnings:"
fi

# No additional warnings occurred.
exit 0
