#!/usr/bin/env perl

=head1 NAME

job-status - Print processing status of given job to STDOUT

=head1 SYNOPSIS

job-status JOB-ID

=head1 COPYRIGHT AND DISCLAIMER

(c) 2019 by Heinz Knutzen <heinz.knutzen@googlemail.com>

http://hknutzen.github.com/Netspoc-API

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

=cut

use strict;
use warnings;
use JSON::XS;

sub read_file {
    my ($path) = @_;
    open(my $fh, '<', $path) or die("Can't open $path: $!\n");
    my $data;
    {
        local $/ = undef;
        $data = <$fh>;
    }
    close($fh);
    return $data;
}

# Result is JSON with
# attribute "status" and value:
# - WAITING
# - INPROGRESS
# - FINISHED
# - DENIED
# - UNKNOWN
# or
# - ERROR
#   with additional attribute "message".

chdir $ENV{HOME};
my $job = shift;
my $user = shift || '';

my ($status, $message);

my $err_file = "result/$job";
my $fin_job = "finished/$job";

if (-f "waiting/$job") {
    $status = 'WAITING';
}
elsif (-f "inprogress/$job") {
    $status = "INPROGRESS";
}
elsif (-f $fin_job) {
    my $json = read_file($fin_job);
    my $job_user = decode_json($json)->{user} || '';
    if ($user ne $job_user) {
        $status = 'DENIED';
    }
    else {
        $message = read_file($err_file);
        unlink $err_file, $fin_job;
        if ($message) {
            $status = 'ERROR';
        }
        else {
            $status = 'FINISHED';
        }
    }
}
else {
    $status = 'UNKNOWN';
}

my $result = { status => $status };
$result->{message} = $message if $message;

print encode_json($result), "\n";
