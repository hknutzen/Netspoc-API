#!/usr/bin/env perl

use strict;
use warnings;

sub ip2bitstr {
    my ($ip) = @_;
    $ip //= '';
    $ip =~ m/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/a or
        die("IP address expected: '$ip'\n");
    if ($1 > 255 or $2 > 255 or $3 > 255 or $4 > 255) {
        die("Invalid IP address: '$ip'\n");
    }
    return pack 'C4', $1, $2, $3, $4;
}
sub bitstr2ip {
    my ($bits) = @_;
    return sprintf "%vd", $bits;
}

# Convert mask to prefix ranging from 0 to 32.
sub bitstr2prefix {
    my ($mask) = @_;
    my $prefix = 0;
    my $zero = pack('N', 0x00000000);
    my $bit = 0x80000000;
    while ($zero ne ($mask & pack('N', $bit))) {
        $bit /= 2;
        $prefix++;
    }
    return $prefix;
}

my ($ip, $mask) = @ARGV;
my $i = ip2bitstr($ip);
my $m = ip2bitstr($mask);
my $n = $i & $m;
my $net = bitstr2ip($n);
my $prefix = bitstr2prefix($m);

print "$net/$prefix";
